//Creating the Contact classmodel.Contact = new DataClass("Contact");//Add Contact attributes.model.Contact.ID = new Attribute("storage", "long", "key auto");model.Contact.firstName = new Attribute("storage", "string", "btree");model.Contact.lastName = new Attribute("storage", "string", "btree");model.Contact.title = new Attribute("storage", "string", "btree");model.Contact.phone = new Attribute("storage", "string", "btree");model.Contact.fax = new Attribute("storage", "string");model.Contact.mobile = new Attribute("storage", "string", "btree");model.Contact.homePhone = new Attribute("storage", "string");model.Contact.emailAccnt = new Attribute("storage", "string", "btree");model.Contact.skypeAccnt = new Attribute("storage", "string");model.Contact.assistant = new Attribute("storage", "string");model.Contact.reportsTo = new Attribute("storage", "string");model.Contact.street = new Attribute("storage", "string", "btree");model.Contact.city = new Attribute("storage", "string", "btree");model.Contact.state = new Attribute("storage", "string", "btree");model.Contact.zip = new Attribute("storage", "string", "btree");model.Contact.country = new Attribute("storage", "string", "btree");model.Contact.shippingStreet = new Attribute("storage", "string");model.Contact.shippingCity = new Attribute("storage", "string");model.Contact.shippingState = new Attribute("storage", "string");model.Contact.shippingZip = new Attribute("storage", "string");model.Contact.shippingCountry = new Attribute("storage", "string");model.Contact.fullName = new Attribute("calculated", "string");model.Contact.owner = new Attribute("relatedEntity", "User", "User"); // relation to the User classmodel.Contact.activityCollection = new Attribute("relatedEntities", "Activity", "contact", {reversePath:true});model.Contact.account = new Attribute("relatedEntity", "Account", "Account"); // relation to the Account classmodel.Contact.noteCollection = new Attribute("relatedEntities", "Note", "contact", {reversePath:true});//Calculated Attributes.model.Contact.fullName.onGet = function() {	return this.firstName + " " + this.lastName; };//Eventsmodel.Contact.events = {};model.Contact.events.onInit = function() {	var myCurrentUser = currentUser(), // we get the user of the current session.		myUser = ds.User.find("ID = :1", myCurrentUser.ID);			if ((myCurrentUser !== null) && (myUser !== null)) {//if a user is logged in.				this.owner = myUser;	}}; //end - onInit();model.Contact.events.onRestrictingQuery = function() {	var myCurrentUser = currentUser(), // we get the user of the current session.		sessionRef = currentSession(), // Get session.		result;			result = ds.Contact.createEntityCollection(); //default to empty collection.		if (sessionRef.belongsTo("Administrator")) {		result = ds.Contact.all();	} else {		result = ds.Contact.query("owner.ID = :1", myCurrentUser.ID);	}		return result;} //end - onRestrictingQuery();