//Creating the Activity classmodel.Activity = new DataClass("Activities");//Add Activity attributes.model.Activity.ID = new Attribute("storage", "long", "key auto");model.Activity.subject = new Attribute("storage", "string", "btree");model.Activity.due = new Attribute("storage", "date");model.Activity.status = new Attribute("storage", "string", "btree");model.Activity.priority = new Attribute("storage", "string", "btree");model.Activity.type = new Attribute("storage", "string");model.Activity.owner = new Attribute("relatedEntity", "User", "User"); // relation to the User classmodel.Activity.contact = new Attribute("relatedEntity", "Contact", "Contact"); // relation to the Contact classmodel.Activity.lead = new Attribute("relatedEntity", "Lead", "Lead"); // relation to the Lead classmodel.Activity.account = new Attribute("relatedEntity", "Account", "Account"); // relation to the Account class//Eventsmodel.Activity.events = {};model.Activity.events.onInit = function() {	var myCurrentUser = currentUser(), // we get the user of the current session.		myUser = ds.User.find("ID = :1", myCurrentUser.ID);			if ((myCurrentUser !== null) && (myUser !== null)) {//if a user is logged in.				this.owner = myUser;	}		this.status = "Not Started";	this.priority = "Normal";}; //end - onInit().